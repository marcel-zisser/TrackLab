syntax = "proto3";

package at.tracklab;

import "types.proto";

service Analytics {
  rpc GetSessionStrategy(SessionRequest) returns (StrategyResponse) {}
  rpc GetLaps(DriverRequest) returns (LapsResponse) {}
  rpc GetQuickLaps(EventRequest) returns (LapsResponse) {}
  rpc GetSpeedTraces(SessionRequest) returns (SpeedTracesResponse) {}
  rpc GetCarTelemetry(CarTelemetryRequest) returns (CarTelemetryResponse) {}
  rpc GetPositionData(EventRequest) returns (PositionDataResponse) {}
  rpc GetDrivers(SessionRequest) returns (DriversResponse) {}
  rpc GetChampionshipContenders(EventRequest) returns (ChampionshipContendersResponse) {}
  rpc GetTrackDomination(DriverRequest) returns (TrackDominationResponse) {}
}

message EventRequest {
  int32 year = 1;
  int32 round = 2;
}

message SessionRequest {
  int32 year = 1;
  int32 round = 2;
  string session = 3;
}

message DriverRequest {
  int32 year = 1;
  int32 round = 2;
  string session = 3;
  repeated string drivers = 4;
}

message StrategyResponse {
  repeated Strategy strategy = 1;
}

message LapsResponse {
  repeated Lap laps = 1;
}

message SpeedTracesResponse {
  repeated SpeedTrace speed_traces = 2;
}

message CarTelemetryRequest {
  int32 year = 1;
  int32 round = 2;
  string session = 3;
  bool withPosition = 4;
}

message CarTelemetryResponse {
  repeated CarTelemetry telemetries = 1;
}

message DriversResponse {
  repeated string drivers = 1;
}

message PositionDataResponse {
  map<string, DriverPositionData> payload = 1;
}

message DriverPositionData {
  repeated int32 positions = 1;
  string color = 2;
  string lineStyle = 3;
}

message ChampionshipContenderList {
  repeated ChampionshipContender contenders = 1;
  int32 roundNumber = 2;
}

message ChampionshipContendersResponse {
  map<string, ChampionshipContenderList> payload = 1;
}

message TrackDominationResponse {
  repeated PositionTelemetry coordinates = 1;
  repeated string domination = 2;
  repeated Driver drivers = 3;
}
